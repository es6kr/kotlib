buildscript {
	try {
		ext.kotlinVersion = project.KOTLIN_VERSION
	} catch (Exception ignored) {
		ext.kotlinVersion = '+'
	}

	repositories {
		mavenCentral()
	}
	dependencies {
		classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlinVersion"
	}
}

apply plugin: 'kotlin'

archivesBaseName = 'kotlib'
group 'kr.es6'
try {
	version project.KOTLIB_VERSION
} catch (Exception ignored) {
}

// Run this task to bundle all needed dependency
task bundle(type: Jar) {
	with jar
}

jar.finalizedBy(bundle)

repositories {
	mavenCentral()
}

dependencies {
	implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlinVersion"
	testImplementation "org.jetbrains.kotlin:kotlin-test-junit:$kotlinVersion"

	implementation "joda-time:joda-time:2.12.5"
	testImplementation "junit:junit:4.13.2"
}

task sourcesJar(type: Jar, dependsOn: classes) {
	archiveClassifier.set('sources')
	from sourceSets.main.allJava
}

task javadocJar(type: Jar, dependsOn: javadoc) {
	archiveClassifier.set('javadoc')
	javadoc.failOnError(false)
	javadoc.source = sourceSets.main.allJava
	from javadoc.destinationDir
}

artifacts {
	archives sourcesJar
	archives javadocJar
}

Properties properties = new Properties()
try {
	properties.load(project.rootProject.file('local.properties').newDataInputStream())
} catch (Exception ignore) {
}
